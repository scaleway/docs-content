#!/bin/bash

CATEGORIES=(ai-data bare-metal compute console containers dedibox dedibox-console developer-tools environmental-footprint identity-and-access-management labs managed-databases managed-services network observability partners serverless storage)

CATEGORIES_REGEX="($(IFS='|'; echo "${CATEGORIES[*]}"))"

#echo "Capturing group : $CATEGORIES_REGEX"

for FILE in $(find . -type f -name '*.mdx')
  do
    if [ -f "$FILE" ]; then
      echo "Traitement du fichier : $FILE"

      # Remplacer les exceptions

      # dedibox-console
      sed -i.bak -E "s#dedibox-console/account#dedibox-account#g" "$FILE"
      # dedibox/vps/quickstart.mdx
      sed -i.bak -E "s#dedibox-console/classic-hosting/#classic-hosting/#g" "$FILE"
      # dedibox-console/classic-hosting/how-to/change-password-mysql-database.mdx
      sed -i.bak -E "s#dedibox-console/cpanel-hosting/#cpanel-hosting/#g" "$FILE"
      # dedibox-console/cpanel-hosting/reference-content.mdx

      # dedibox-network
      sed -i.bak -E "s#dedibox-network/network/#dedibox-network/#g" "$FILE"
      # dedibox-network/network/index.mdx
      sed -i.bak -E "s#dedibox-network/rpn/#dedibox-rpn/#g" "$FILE"
      # dedibox-network/rpn/index.mdx
      sed -i.bak -E "s#dedibox-network/ipv6/#dedibox-ipv6/#g" "$FILE"
      # dedibox-network/ipv6/concepts.mdx
      sed -i.bak -E "s#dedibox-network/domains/#dedibox-domains/#g" "$FILE"
      # dedibox-network/dns/concepts.mdx
      sed -i.bak -E "s#dedibox-network/dns/#dedibox-dns/#g" "$FILE"
      # dedibox-network/dns/index.mdx
      sed -i.bak -E "s#dedibox-network/ip-failover/#dedibox-ip-failover/#g" "$FILE"
      # dedibox-network/ipv6/concepts.mdx

      # dedibox
      sed -i.bak -E "s#dedibox/vps/#dedibox-vps/#g" "$FILE"
      # dedibox/vps/how-to/delete-vps.mdx
      sed -i.bak -E "s#dedibox/kvm-over-ip/#dedibox-kvm-over-ip/#g" "$FILE"
      # dedibox/kvm-over-ip/how-to/dell-idrac9.mdx

      # storage
      sed -i.bak -E "s#storage/object/#object-storage/#g" "$FILE"
      # compute/instances/api-cli/snapshot-import-export-feature.mdx
      sed -i.bak -E "s#storage/block/#block-storage/#g" "$FILE"
      # compute/gpu/how-to/use-gpu-with-docker.mdx

      # serverless
      sed -i.bak -E "s#serverless/sql-databases/#serverless-sql-databases/#g" "$FILE"
      # faq/serverless-sql-databases.mdx
      sed -i.bak -E "s#serverless/functions/#serverless-functions/#g" "$FILE"
      # faq/serverless-jobs.mdx
      sed -i.bak -E "s#serverless/containers/#serverless-containers/#g" "$FILE"
      # serverless/containers/concepts.mdx
      sed -i.bak -E "s#serverless/jobs/#serverless-jobs/#g" "$FILE"
      # changelog/november2024/2024-11-05-jobs-added-serverless-jobs-integrates-secret-manager.mdx

      # managed-database
      sed -i.bak -E "s#managed-databases/postgresql-and-mysql/#managed-databases-for-postgresql-and-mysql/#g" "$FILE"
      # changelog/august2024/2024-08-02-postgresql-and-mysql-added-encryption-at-rest-available.mdx
      sed -i.bak -E "s#managed-databases/redis/#managed-databases-for-redis/#g" "$FILE"
      # faq/databases-for-redis.mdx
      sed -i.bak -E "s#managed-databases/mongodb/#managed-mongodb-databases/#g" "$FILE"
      # managed-databases/mongodb/how-to/manage-snapshots.mdx

      # bare-metal
      sed -i.bak -E "s#bare-metal/dedibox/#dedibox-scaleway/#g" "$FILE"
      # bare-metal/dedibox/how-to/activate-ipv6-block.mdx

      # Dans le markdown & les compodants mdx :
      # On supprime la catégorie des url relatives
      # On prends garde à ne pas modifier les pages catégories (ex: /managed-databases/) ces URL n'ayant que la catégorie, si on la supprime on se retrouve avec une redirection sur la home
      sed -i.bak -E "s#\(/$CATEGORIES_REGEX/([^/\)]+)#\(/\2#g" "$FILE"
      sed -i.bak -E "s#\"/$CATEGORIES_REGEX/([^/\)]+)#\"/\2#g" "$FILE"

      # Remplacer les URLs absolues
      sed -i.bak -E "s#(https://www\.scaleway\.com/en/docs)/($CATEGORIES_REGEX)/([^/]+)#\1/\4#g" "$FILE"

      # Nettoyer les doublons de slashes
      sed -i.bak 's#docs//#docs/#g' "$FILE"

      # Supprimer les fichiers .bak
      rm "$FILE.bak"
    else
      echo "Aucun fichier trouvé."
  fi
done